<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.4.RELEASE</version>
  </parent>
  <groupId>com.sincerered</groupId>
  <artifactId>mail-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>mail-service</name>
  
   <properties>
        <java.version>1.8</java.version>
    </properties>
    
    <dependencies>
		<!-- use jersey in spring boot start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>

			<!-- use jetty instead of tomcat -->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- use jersey in spring boot end -->

		<!-- jetty start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		<!-- jetty end -->

		<!-- jpa start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- jpa end -->

		<!-- redis start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- redis end -->

		<!-- syntrontech registry start -->
		<dependency>
			<groupId>com.syntrontech</groupId>
			<artifactId>service-registry</artifactId>
			<version>1.0.0-RC</version>
		</dependency>
		<!-- syntrontech registry end -->

		<!-- syntrontech redis-orm start -->
		<dependency>
			<groupId>com.syntrontech</groupId>
			<artifactId>redis-orm</artifactId>
			<version>1.2.0-RC</version>
		</dependency>
		<!-- syntrontech redis-orm end -->

		<!-- syntrontech auto-development-tool start -->
		<dependency>
			<groupId>com.syntrontech</groupId>
			<artifactId>auto-development-tool</artifactId>
			<version>1.1.0-RC</version>
		</dependency>
		<!-- syntrontech auto-development-tool end -->

		<!-- postgres start -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<!-- postgres end -->

		<!-- dbcp2 start -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
		</dependency>
		<!-- dbcp2 end -->

		<!-- Liquibase start -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<!-- Liquibase end -->

		<!-- mail server start -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.0</version>
		</dependency>
		<!-- mail server end -->
		
		<!-- mockito start -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<!-- mockito end -->
	
		<!-- junit start -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!--  junit end -->

	</dependencies>
    
    	<build>
<!--		<finalName>auth-service</finalName> -->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- <configuration> <source>${javac.compile.level}</source> <target>${javac.compile.level}</target> 
					</configuration> -->
			</plugin>
		</plugins>
	</build>
</project>